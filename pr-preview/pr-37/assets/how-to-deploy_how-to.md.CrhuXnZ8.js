import{_ as i,c as a,o as e,a4 as n}from"./chunks/framework.DvCJebEF.js";const c=JSON.parse('{"title":"Documentation Versioning - How-To Guide","description":"","frontmatter":{},"headers":[],"relativePath":"how-to-deploy/how-to.md","filePath":"how-to-deploy/how-to.md"}'),t={name:"how-to-deploy/how-to.md"};function l(h,s,p,r,o,k){return e(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="documentation-versioning-how-to-guide" tabindex="-1">Documentation Versioning - How-To Guide <a class="header-anchor" href="#documentation-versioning-how-to-guide" aria-label="Permalink to &quot;Documentation Versioning - How-To Guide&quot;">​</a></h1><p>This guide explains how to use the versioning system for Platform Mesh documentation, including local testing and GitHub deployment.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>The documentation uses a <strong>branch-based versioning system</strong>:</p><ul><li><code>main</code> branch → Deployed to <code>/main/</code> (latest development docs)</li><li><code>release-*</code> branches → Deployed to <code>/release-X.Y/</code> (stable release docs)</li><li>PR previews → Deployed to <code>/pr-preview/pr-{number}/</code> (unchanged)</li></ul><p>Each version is independently deployable and maintains its own content while sharing the same VitePress theme and configuration.</p><h2 id="local-testing" tabindex="-1">Local Testing <a class="header-anchor" href="#local-testing" aria-label="Permalink to &quot;Local Testing&quot;">​</a></h2><h3 id="quick-test-single-version" tabindex="-1">Quick Test (Single Version) <a class="header-anchor" href="#quick-test-single-version" aria-label="Permalink to &quot;Quick Test (Single Version)&quot;">​</a></h3><p>Test one version at a time to verify builds work correctly:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Test main version</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DOCS_VERSION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">main</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> preview</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Open: http://localhost:4173/main/</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Test release version</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DOCS_VERSION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">release-0.1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> preview</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Open: http://localhost:4173/release-0.1/</span></span></code></pre></div><p><strong>What to check:</strong></p><ul><li>✅ Page loads without errors</li><li>✅ All styling looks correct</li><li>✅ Version selector dropdown appears in navigation</li><li>✅ Navigation links work properly</li><li>✅ Images and assets load</li></ul><p><strong>Limitation:</strong> Version switching won&#39;t work because only one version exists in the build output at a time.</p><h3 id="full-test-version-switching" tabindex="-1">Full Test (Version Switching) <a class="header-anchor" href="#full-test-version-switching" aria-label="Permalink to &quot;Full Test (Version Switching)&quot;">​</a></h3><p>Test the complete version switching functionality:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. Build main version</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DOCS_VERSION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">main</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test-deploy/main</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .vitepress/dist/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test-deploy/main/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. Build release-0.1 version</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DOCS_VERSION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">release-0.1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test-deploy/release-0.1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .vitepress/dist/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test-deploy/release-0.1/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3. Serve both versions</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test-deploy</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http.server</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8080</span></span></code></pre></div><p><strong>Open in browser:</strong></p><ul><li><code>http://localhost:8080/main/</code> - Main version</li><li><code>http://localhost:8080/release-0.1/</code> - Release version</li></ul><p><strong>What to check:</strong></p><ul><li>✅ Both URLs load correctly</li><li>✅ Version selector shows all versions</li><li>✅ Switching versions works (dropdown navigates to different version)</li><li>✅ Current version is highlighted in dropdown</li><li>✅ Switching preserves current page path (e.g., <code>/main/overview/</code> → <code>/release-0.1/overview/</code>)</li></ul><p><strong>Cleanup after testing:</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ..</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test-deploy/</span></span></code></pre></div><h3 id="development-server" tabindex="-1">Development Server <a class="header-anchor" href="#development-server" aria-label="Permalink to &quot;Development Server&quot;">​</a></h3><p>For actively developing documentation content:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Open: http://localhost:5173/</span></span></code></pre></div><p><strong>Note:</strong> The dev server doesn&#39;t use versioned paths. Use this for:</p><ul><li>Writing and previewing content</li><li>Testing theme changes</li><li>Rapid iteration on markdown files</li></ul><p>For version-specific testing, always use the build + preview method.</p><h2 id="github-deployment" tabindex="-1">GitHub Deployment <a class="header-anchor" href="#github-deployment" aria-label="Permalink to &quot;GitHub Deployment&quot;">​</a></h2><h3 id="initial-setup-one-time" tabindex="-1">Initial Setup (One-Time) <a class="header-anchor" href="#initial-setup-one-time" aria-label="Permalink to &quot;Initial Setup (One-Time)&quot;">​</a></h3><p>The versioning system is already configured. The GitHub Actions workflow (<code>.github/workflows/pages.yaml</code>) handles:</p><ul><li>Building documentation for version branches</li><li>Deploying to GitHub Pages</li><li>Managing PR previews</li></ul><p><strong>Prerequisites:</strong></p><ul><li>GitHub Pages must be enabled (Settings → Pages)</li><li>Deploy from <code>gh-pages</code> branch</li><li>Workflow has <code>contents: write</code> permission</li></ul><h3 id="deploying-main-branch" tabindex="-1">Deploying Main Branch <a class="header-anchor" href="#deploying-main-branch" aria-label="Permalink to &quot;Deploying Main Branch&quot;">​</a></h3><p>Pushing to <code>main</code> automatically deploys the latest docs:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Make changes to documentation</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ... edit markdown files ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Update documentation&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span></code></pre></div><p><strong>What happens:</strong></p><ol><li>GitHub Actions workflow triggers</li><li>Builds with <code>DOCS_VERSION=main</code></li><li>Deploys to <code>gh-pages</code> branch under <code>/main/</code> directory</li><li>Available at: <code>https://platform-mesh.github.io/main/</code></li></ol><p><strong>Monitor deployment:</strong></p><ul><li>Go to repository → <strong>Actions</strong> tab</li><li>Click on the running workflow</li><li>Wait for ✅ completion (typically 1-2 minutes)</li><li>Check deployment at your GitHub Pages URL</li></ul><h3 id="creating-a-release-branch" tabindex="-1">Creating a Release Branch <a class="header-anchor" href="#creating-a-release-branch" aria-label="Permalink to &quot;Creating a Release Branch&quot;">​</a></h3><p>When you&#39;re ready to create a stable release version:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. Start from latest main</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. Create release branch (use pattern: release-X.Y)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release-0.1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3. Push to GitHub</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release-0.1</span></span></code></pre></div><p><strong>What happens:</strong></p><ol><li>GitHub Actions workflow automatically triggers (matches <code>release-*</code> pattern)</li><li>Extracts version from branch name: <code>release-0.1</code></li><li>Builds with <code>DOCS_VERSION=release-0.1</code></li><li>Deploys to <code>gh-pages</code> branch under <code>/release-0.1/</code> directory</li><li>Available at: <code>https://platform-mesh.github.io/release-0.1/</code></li></ol><p><strong>Verify deployment:</strong></p><ol><li>Check <strong>Actions</strong> tab for workflow run</li><li>Wait for completion</li><li>Visit <code>https://platform-mesh.github.io/release-0.1/</code></li><li>Verify content is correct</li></ol><h3 id="updating-the-version-selector" tabindex="-1">Updating the Version Selector <a class="header-anchor" href="#updating-the-version-selector" aria-label="Permalink to &quot;Updating the Version Selector&quot;">​</a></h3><p>After creating a new release branch, add it to the dropdown:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. Edit the version selector component</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span></code></pre></div><p>Edit <code>.vitepress/theme/components/VersionSelector.vue</code>:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> versions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;main&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;main (latest)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;release-0.2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;v0.2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Add new versions here</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;release-0.1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;v0.1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. Commit and push</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .vitepress/theme/components/VersionSelector.vue</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Add release-0.2 to version selector&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span></code></pre></div><p><strong>Apply to other branches (optional):</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Update the dropdown on release branches too</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release-0.1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cherry-pick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">commit-hash-from-mai</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release-0.1</span></span></code></pre></div><h3 id="updating-release-documentation" tabindex="-1">Updating Release Documentation <a class="header-anchor" href="#updating-release-documentation" aria-label="Permalink to &quot;Updating Release Documentation&quot;">​</a></h3><p>To fix or update a specific release version:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. Checkout the release branch</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release-0.1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. Make changes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ... edit markdown files ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3. Commit and push</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Fix typo in release-0.1 docs&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release-0.1</span></span></code></pre></div><p><strong>What happens:</strong></p><ul><li>Workflow triggers automatically</li><li>Rebuilds only the <code>release-0.1</code> version</li><li>Redeploys to <code>/release-0.1/</code> (overwrites previous deployment)</li><li>Other versions (main, release-0.2, etc.) are unaffected</li></ul><h2 id="pull-request-previews" tabindex="-1">Pull Request Previews <a class="header-anchor" href="#pull-request-previews" aria-label="Permalink to &quot;Pull Request Previews&quot;">​</a></h2><p>PR previews continue to work as before, completely independent of versioning.</p><h3 id="how-it-works" tabindex="-1">How It Works <a class="header-anchor" href="#how-it-works" aria-label="Permalink to &quot;How It Works&quot;">​</a></h3><p>When you open a PR to <code>main</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. Create a feature branch</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature/my-changes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ... make changes ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Add new feature documentation&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature/my-changes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. Open PR on GitHub</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Go to repository → Pull Requests → New Pull Request</span></span></code></pre></div><p><strong>What happens:</strong></p><ol><li>Workflow triggers on PR events (opened, synchronized)</li><li>Builds with <code>PAGES_BASE=pr-preview/pr-{number}</code> (NOT <code>DOCS_VERSION</code>)</li><li>Deploys to <code>/pr-preview/pr-{number}/</code> on <code>gh-pages</code> branch</li><li>Bot comments on PR with preview URL</li></ol><p><strong>Preview URL:</strong><code>https://platform-mesh.github.io/pr-preview/pr-{number}/</code></p><p><strong>Verify PR preview:</strong></p><ol><li>Open the PR on GitHub</li><li>Wait for workflow to complete</li><li>Click the preview URL in the bot comment</li><li>Review your changes before merging</li></ol><h3 id="pr-preview-vs-versioning" tabindex="-1">PR Preview vs Versioning <a class="header-anchor" href="#pr-preview-vs-versioning" aria-label="Permalink to &quot;PR Preview vs Versioning&quot;">​</a></h3><p><strong>Key differences:</strong></p><table tabindex="0"><thead><tr><th>Feature</th><th>PR Preview</th><th>Version Branches</th></tr></thead><tbody><tr><td>Trigger</td><td>Pull request events</td><td>Push to main/release-*</td></tr><tr><td>Environment Variable</td><td><code>PAGES_BASE</code></td><td><code>DOCS_VERSION</code></td></tr><tr><td>Base Path</td><td><code>/pr-preview/pr-{number}/</code></td><td><code>/main/</code> or <code>/release-X.Y/</code></td></tr><tr><td>Persistence</td><td>Deleted when PR closes</td><td>Permanent until branch deleted</td></tr><tr><td>Purpose</td><td>Review changes</td><td>Stable documentation</td></tr></tbody></table><p><strong>They coexist without conflict:</strong></p><ul><li>PR previews use <code>PAGES_BASE</code> environment variable</li><li>Version branches use <code>DOCS_VERSION</code> environment variable</li><li>VitePress config checks <code>DOCS_VERSION</code> first, then <code>PAGES_BASE</code></li><li>Different concurrency groups prevent deployment conflicts</li></ul><h3 id="testing-pr-previews" tabindex="-1">Testing PR Previews <a class="header-anchor" href="#testing-pr-previews" aria-label="Permalink to &quot;Testing PR Previews&quot;">​</a></h3><p>To verify PR preview functionality still works:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. Create a test branch</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test-pr-preview</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;# Test PR Preview&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test-file.md</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test-file.md</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Test PR preview deployment&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test-pr-preview</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. Open PR on GitHub</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3. Wait for workflow and check preview URL</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 4. Verify preview works, then close PR</span></span></code></pre></div><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><h3 id="build-fails-locally" tabindex="-1">Build Fails Locally <a class="header-anchor" href="#build-fails-locally" aria-label="Permalink to &quot;Build Fails Locally&quot;">​</a></h3><p><strong>Problem:</strong> <code>npm run build</code> fails with errors</p><p><strong>Solutions:</strong></p><ol><li><p>Clear VitePress cache:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .vitepress/cache</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .vitepress/dist</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div></li><li><p>Reinstall dependencies:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node_modules</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package-lock.json</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div></li><li><p>Check for syntax errors in Vue components or config files</p></li></ol><h3 id="version-selector-not-showing" tabindex="-1">Version Selector Not Showing <a class="header-anchor" href="#version-selector-not-showing" aria-label="Permalink to &quot;Version Selector Not Showing&quot;">​</a></h3><p><strong>Problem:</strong> Dropdown doesn&#39;t appear in navigation</p><p><strong>Check:</strong></p><ol><li><p>Verify <code>Layout.vue</code> is being used:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .vitepress/theme/index.js</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Should show: ...DefaultTheme, Layout,</span></span></code></pre></div></li><li><p>Check browser console for JavaScript errors</p></li><li><p>Rebuild:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DOCS_VERSION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">main</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> preview</span></span></code></pre></div></li></ol><h3 id="version-switching-shows-404" tabindex="-1">Version Switching Shows 404 <a class="header-anchor" href="#version-switching-shows-404" aria-label="Permalink to &quot;Version Switching Shows 404&quot;">​</a></h3><p><strong>Problem:</strong> Clicking version in dropdown shows &quot;Page Not Found&quot;</p><p><strong>Local testing:</strong></p><ul><li>You need BOTH versions deployed to <code>test-deploy/</code> directory</li><li>Follow &quot;Full Test (Version Switching)&quot; steps exactly</li></ul><p><strong>On GitHub:</strong></p><ul><li>Verify both branches have been deployed</li><li>Check Actions tab for successful deployments</li><li>Verify URLs work independently: <ul><li><code>https://platform-mesh.github.io/main/</code></li><li><code>https://platform-mesh.github.io/release-0.1/</code></li></ul></li></ul><h3 id="workflow-not-triggering" tabindex="-1">Workflow Not Triggering <a class="header-anchor" href="#workflow-not-triggering" aria-label="Permalink to &quot;Workflow Not Triggering&quot;">​</a></h3><p><strong>Problem:</strong> Push to branch doesn&#39;t trigger workflow</p><p><strong>Check:</strong></p><ol><li><p>Branch name matches pattern:</p><ul><li>✅ <code>main</code> - triggers</li><li>✅ <code>release-0.1</code> - triggers (matches <code>release-*</code>)</li><li>✅ <code>release-1.0</code> - triggers</li><li>❌ <code>rel-0.1</code> - doesn&#39;t match pattern</li><li>❌ <code>v0.1</code> - doesn&#39;t match pattern</li></ul></li><li><p>Workflow file is on the branch:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">branc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .github/workflows/pages.yaml</span></span></code></pre></div></li><li><p>Check Actions tab for errors or disabled workflows</p></li></ol><h3 id="pr-preview-not-deploying" tabindex="-1">PR Preview Not Deploying <a class="header-anchor" href="#pr-preview-not-deploying" aria-label="Permalink to &quot;PR Preview Not Deploying&quot;">​</a></h3><p><strong>Problem:</strong> PR preview workflow runs but doesn&#39;t deploy</p><p><strong>Check:</strong></p><ol><li><p>PR is from same repository (not a fork):</p><ul><li>Workflow has <code>!github.event.pull_request.head.repo.fork</code> check</li><li>Fork PRs won&#39;t deploy for security reasons</li></ul></li><li><p>Check workflow run logs in Actions tab</p></li><li><p>Verify <code>pr-preview</code> directory not in <code>.gitignore</code></p></li></ol><h3 id="assets-not-loading-404s" tabindex="-1">Assets Not Loading (404s) <a class="header-anchor" href="#assets-not-loading-404s" aria-label="Permalink to &quot;Assets Not Loading (404s)&quot;">​</a></h3><p><strong>Problem:</strong> Images or CSS not loading, showing 404 errors</p><p><strong>Cause:</strong> Base path mismatch</p><p><strong>Check:</strong></p><ol><li><p>Build was done with correct <code>DOCS_VERSION</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DOCS_VERSION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">main</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div></li><li><p>Serving from correct path:</p><ul><li><code>http://localhost:4173/main/</code> (not <code>http://localhost:4173/</code>)</li></ul></li><li><p>Markdown image paths are relative or use proper base path</p></li></ol><h3 id="styles-broken-after-update" tabindex="-1">Styles Broken After Update <a class="header-anchor" href="#styles-broken-after-update" aria-label="Permalink to &quot;Styles Broken After Update&quot;">​</a></h3><p><strong>Problem:</strong> Site loads but styling is completely wrong</p><p><strong>Check:</strong></p><ol><li><p>Theme export structure in <code>.vitepress/theme/index.js</code>:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DefaultTheme,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Must spread DefaultTheme</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Layout,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>Custom CSS is imported:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./custom.css&#39;</span></span></code></pre></div></li><li><p>Clear cache and rebuild:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .vitepress/cache</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div></li></ol><h2 id="workflow-reference" tabindex="-1">Workflow Reference <a class="header-anchor" href="#workflow-reference" aria-label="Permalink to &quot;Workflow Reference&quot;">​</a></h2><h3 id="github-actions-environment-variables" tabindex="-1">GitHub Actions Environment Variables <a class="header-anchor" href="#github-actions-environment-variables" aria-label="Permalink to &quot;GitHub Actions Environment Variables&quot;">​</a></h3><p>The workflow automatically sets these based on context:</p><table tabindex="0"><thead><tr><th>Branch</th><th><code>DOCS_VERSION</code></th><th><code>PAGES_BASE</code></th><th>Deploy Path</th></tr></thead><tbody><tr><td><code>main</code></td><td><code>main</code></td><td>(empty)</td><td><code>/main/</code></td></tr><tr><td><code>release-0.1</code></td><td><code>release-0.1</code></td><td>(empty)</td><td><code>/release-0.1/</code></td></tr><tr><td>PR to main</td><td>(empty)</td><td><code>pr-preview/pr-{number}</code></td><td><code>/pr-preview/pr-{number}/</code></td></tr></tbody></table><h3 id="concurrency-groups" tabindex="-1">Concurrency Groups <a class="header-anchor" href="#concurrency-groups" aria-label="Permalink to &quot;Concurrency Groups&quot;">​</a></h3><p>Deployments use separate concurrency groups to prevent conflicts:</p><ul><li>Main: <code>pages-main</code></li><li>Release branches: <code>pages-release-0.1</code>, <code>pages-release-0.2</code>, etc.</li><li>PR previews: <code>pages-preview-123</code>, <code>pages-preview-456</code>, etc.</li></ul><p>This allows:</p><ul><li>Multiple versions to deploy simultaneously</li><li>PR previews to deploy while version deploys are running</li><li>No race conditions or overwriting</li></ul><h3 id="manual-workflow-trigger" tabindex="-1">Manual Workflow Trigger <a class="header-anchor" href="#manual-workflow-trigger" aria-label="Permalink to &quot;Manual Workflow Trigger&quot;">​</a></h3><p>You can manually trigger deployment from Actions tab:</p><ol><li>Go to repository → <strong>Actions</strong></li><li>Select &quot;pages&quot; workflow</li><li>Click <strong>Run workflow</strong></li><li>Select branch to deploy</li><li>Click <strong>Run workflow</strong> button</li></ol><p>Useful for:</p><ul><li>Redeploying after GitHub Pages issues</li><li>Testing workflow changes</li><li>Forcing a rebuild without code changes</li></ul><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><h3 id="version-naming" tabindex="-1">Version Naming <a class="header-anchor" href="#version-naming" aria-label="Permalink to &quot;Version Naming&quot;">​</a></h3><p>Use consistent naming for release branches:</p><ul><li>✅ <code>release-0.1</code>, <code>release-0.2</code>, <code>release-1.0</code></li><li>✅ <code>release-2024.1</code>, <code>release-2024.2</code></li><li>❌ <code>v0.1</code>, <code>0.1</code>, <code>rel-0.1</code> (won&#39;t trigger workflow)</li></ul><h3 id="when-to-create-release-branches" tabindex="-1">When to Create Release Branches <a class="header-anchor" href="#when-to-create-release-branches" aria-label="Permalink to &quot;When to Create Release Branches&quot;">​</a></h3><p>Create a release branch when:</p><ul><li>Major feature is complete and stable</li><li>Ready to freeze documentation for a release</li><li>Need to maintain docs for older versions</li><li>Creating a new product version</li></ul><p>Don&#39;t create release branches for:</p><ul><li>Every commit or small change</li><li>Work-in-progress features</li><li>Experimental documentation</li></ul><h3 id="maintaining-multiple-versions" tabindex="-1">Maintaining Multiple Versions <a class="header-anchor" href="#maintaining-multiple-versions" aria-label="Permalink to &quot;Maintaining Multiple Versions&quot;">​</a></h3><p><strong>Update all versions</strong> for:</p><ul><li>Critical bug fixes</li><li>Security updates</li><li>Broken links or errors</li></ul><p><strong>Update only specific versions</strong> for:</p><ul><li>Version-specific features</li><li>Deprecated functionality (remove from new versions)</li><li>Different behavior between versions</li></ul><p><strong>Example workflow:</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Fix critical typo in all versions</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ... fix typo ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Fix critical typo&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Cherry-pick to release branches</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release-0.1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cherry-pick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">commit-has</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release-0.1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release-0.2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cherry-pick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">commit-has</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release-0.2</span></span></code></pre></div><h3 id="version-selector-management" tabindex="-1">Version Selector Management <a class="header-anchor" href="#version-selector-management" aria-label="Permalink to &quot;Version Selector Management&quot;">​</a></h3><p><strong>Keep it updated:</strong></p><ul><li>Add new versions to dropdown when created</li><li>List versions in reverse chronological order (newest first, except main)</li><li>Use clear labels (<code>main (latest)</code>, <code>v0.2</code>, <code>v0.1</code>)</li></ul><p><strong>Remove old versions:</strong></p><ol><li>Delete the branch: <code>git push origin --delete release-0.1</code></li><li>Remove from dropdown in <code>VersionSelector.vue</code></li><li>Optionally: manually delete from <code>gh-pages</code> branch</li></ol><h3 id="testing-before-merging" tabindex="-1">Testing Before Merging <a class="header-anchor" href="#testing-before-merging" aria-label="Permalink to &quot;Testing Before Merging&quot;">​</a></h3><p>Always test locally before pushing:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. Build and test locally</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DOCS_VERSION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">main</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> preview</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. Check for issues</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># - Broken links</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># - Missing images</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># - Formatting problems</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3. If good, push to GitHub</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span></code></pre></div><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h2><p><strong>Local Testing:</strong></p><ul><li>Quick: <code>DOCS_VERSION=main npm run build &amp;&amp; npm run preview</code></li><li>Full: Build both versions to <code>test-deploy/</code>, serve with <code>python3 -m http.server</code></li></ul><p><strong>GitHub Deployment:</strong></p><ul><li>Main: Push to <code>main</code> → deploys to <code>/main/</code></li><li>Release: Push to <code>release-X.Y</code> → deploys to <code>/release-X.Y/</code></li><li>PR Preview: Open PR → deploys to <code>/pr-preview/pr-{number}/</code></li></ul><p><strong>All three coexist independently without conflicts!</strong></p><p>For questions or issues, check the troubleshooting section or review workflow logs in the Actions tab.</p>`,157)])])}const g=i(t,[["render",l]]);export{c as __pageData,g as default};
