import{_ as p,C as b,c as A,o as a,a2 as d,b as n,j as t,w as s,a as o,G as i,a3 as l}from"./chunks/framework.C8bG_pcR.js";const E=JSON.parse('{"title":"Provider to Consumer (P2C)","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"scenarios/provider-to-consumer.md","filePath":"scenarios/provider-to-consumer.md"}'),u={name:"scenarios/provider-to-consumer.md"};function c(h,e,m,P,D,g){const r=b("Mermaid");return a(),A("div",null,[e[4]||(e[4]=d("",7)),(a(),n(l,null,{default:s(()=>[i(r,{id:"mermaid-21",class:"mermaid",graph:"flowchart%20TD%0A%0Asubgraph%20Provider%0A%20%20%20%20origCRD%5BService%20CRD%5D%0A%20%20%20%20copyInstance%5BService%20Instance%5D%0A%20%20%20%20origSecret%5BService%20Secret%5D%0Aend%0A%0AorigCRD%20-.-%3E%20copyCRD%0AcopyCRD%20-.-%3E%20consumerInstance%0AconsumerInstance%20--%3E%20copyInstance%0AcopyInstance%20-.-%3E%20origSecret%0AorigSecret%20--%3E%20copySecret%0A%0Asubgraph%20Consumer%0A%20%20%20%20copyCRD%5BService%20CRD%5D%0A%20%20%20%20consumerInstance%5BService%20Instance%5D%0A%20%20%20%20copySecret%5BService%20Secret%5D%0Aend%0A"})]),fallback:s(()=>[...e[0]||(e[0]=[o(" Loading... ",-1)])]),_:1})),e[5]||(e[5]=t("h2",{id:"kube-to-kcp-to-kube",tabindex:"-1"},[o("Kube to KCP to Kube "),t("a",{class:"header-anchor",href:"#kube-to-kcp-to-kube","aria-label":'Permalink to "Kube to KCP to Kube"'},"​")],-1)),e[6]||(e[6]=t("h3",{id:"problem-description-1",tabindex:"-1"},[o("Problem Description "),t("a",{class:"header-anchor",href:"#problem-description-1","aria-label":'Permalink to "Problem Description"'},"​")],-1)),e[7]||(e[7]=t("p",null,"The problem is specified on the example of an Internal Developer Platform (IDP). Teams can be Providers and Consumer of Services.",-1)),e[8]||(e[8]=t("p",null,"The Database Team (DB) offers a Postgres Service. The Observability Team (Obs) wants to use the Postgres Service as the database for their Elastic service. The Webshop Team (WS) wants to use the Postgres Services as the database for the Webshops they maintain for their customers and the Elastic Service for logging and metrics.",-1)),e[9]||(e[9]=t("p",null,"This diagram shows the premise of the problem:",-1)),(a(),n(l,null,{default:s(()=>[i(r,{id:"mermaid-37",class:"mermaid",graph:"flowchart%20LR%0A%0Asubgraph%20KCP%0A%20%20%20%20subgraph%20KCP_DB%5Broot%3Ateam%3Adatabase%5D%0A%20%20%20%20%20%20%20%20PGExport%5BPostgres%20APIExport%5D%0A%20%20%20%20end%0A%0A%20%20%20%20subgraph%20KCP_Obs%5Broot%3Ateam%3Aobservability%5D%0A%20%20%20%20%20%20%20%20PGBindingObs%5BPostgres%20APIBinding%5D%0A%20%20%20%20%20%20%20%20ElasticExport%5BElastic%20APIExport%5D%0A%20%20%20%20end%0A%20%20%20%20PGExport%20-.-%3E%20PGBindingObs%0A%0A%20%20%20%20subgraph%20KCP_WS%5Broot%3Ateam%3Awebshop%5D%0A%20%20%20%20%20%20%20%20ElasticBinding%5BElastic%20APIBinding%5D%0A%20%20%20%20%20%20%20%20PGBindingWS%5BPostgres%20APIBinding%5D%0A%20%20%20%20end%0A%20%20%20%20PGExport%20-.-%3E%20PGBindingWS%0A%20%20%20%20ElasticExport%20-.-%3E%20ElasticBinding%0Aend%0A%0Asubgraph%20DBCompute%5BDatabase%20Compute%20Cluster%5D%0A%20%20%20%20PGCRD%5BPostgres%20CRD%5D%0A%20%20%20%20PGCRD%20-.-%3E%20%7Capi-syncagent%7C%20PGExport%0Aend%0A%0Asubgraph%20ObsCompute%5BObservability%20Compute%20Cluster%5D%0A%20%20%20%20ElasticCRD%5BElastic%20CRD%5D%0A%20%20%20%20ElasticCRD%20-.-%3E%20%7Capi-syncagent%7C%20ElasticExport%0Aend%0A%0Asubgraph%20WSCompute%5BWorkshop%20Compute%20Cluster%5D%0A%20%20%20%20Webshop%0Aend%0A"})]),fallback:s(()=>[...e[1]||(e[1]=[o(" Loading... ",-1)])]),_:1})),e[10]||(e[10]=t("p",null,"Not pictures is the teams using e.g. GitOps to manage the components of their services, which are running in the respective clusters.",-1)),e[11]||(e[11]=t("h3",{id:"tools-solution",tabindex:"-1"},[o("Tools Solution "),t("a",{class:"header-anchor",href:"#tools-solution","aria-label":'Permalink to "Tools Solution"'},"​")],-1)),e[12]||(e[12]=t("p",null,"This solution focuses on using commonly available tools to manage and apply the manifests.",-1)),e[13]||(e[13]=t("p",null,"The Obersvability Team uses KRO (Kubernetes Resource Orchestrator) to instantiate their Elastic Service, including the Postgres Instance from the Database Team.",-1)),e[14]||(e[14]=t("p",null,"Since KRO works only on one Cluster they are using kube-bind to pull the CRD of the Postgres Services from the APIBinding they created in their workspace to their compute cluster.",-1)),e[15]||(e[15]=t("p",null,"The postgres instance for an elastic service is created as part of the KRO Resource Graph Definition, which is mirrored back to KCP by kube-bind.",-1)),(a(),n(l,null,{default:s(()=>[i(r,{id:"mermaid-56",class:"mermaid",graph:"flowchart%20TD%0A%0Asubgraph%20KCP%0A%20%20%20%20subgraph%20KCP_DB%5Broot%3Ateam%3Adatabase%5D%0A%20%20%20%20%20%20%20%20PGExport%5BPostgres%20APIExport%5D%0A%20%20%20%20end%0A%0A%20%20%20%20subgraph%20KCP_Obs%5Broot%3Ateam%3Aobservability%5D%0A%20%20%20%20%20%20%20%20ElasticExport%5BElastic%20APIExport%5D%0A%20%20%20%20%20%20%20%20PGBindingObs%5BPostgres%20APIBinding%5D%0A%20%20%20%20%20%20%20%20PGInstanceObsWs%5BObs%20Postgres%20Instance%5D%0A%20%20%20%20end%0A%20%20%20%20PGExport%20-.-%3E%20PGBindingObs%0Aend%0A%0Asubgraph%20DBCompute%5BDatabase%20Compute%20Cluster%5D%0A%20%20%20%20PGCRD%5BPostgres%20CRD%5D%0A%20%20%20%20PGCRD%20-.-%3E%20%7Capi-syncagent%7C%20PGExport%0A%20%20%20%20PGInstanceObsReal%5BObs%20Postgres%20Instance%5D%0A%20%20%20%20PGInstanceObsWs%20--%3E%20PGInstanceObsReal%0Aend%0A%0Asubgraph%20ObsCompute%5BObservability%20Compute%20Cluster%5D%0A%20%20%20%20ElasticCRD%5BElastic%20CRD%5D%0A%20%20%20%20ElasticCRD%20-.-%3E%20%7Capi-syncagent%7C%20ElasticExport%0A%0A%20%20%20%20PGCRDObs%5BPostgres%20CRD%5D%0A%20%20%20%20PGBindingObs%20-.-%3E%20%7Ckube-bind%7C%20PGCRDObs%0A%0A%20%20%20%20ElasticInstance%0A%20%20%20%20ElasticCRD%20-.-%3E%20ElasticInstance%0A%0A%20%20%20%20PGInstanceObs%5BObs%20Postgres%20Instance%5D%0A%20%20%20%20ElasticInstance%20-.-%3E%20PGInstanceObs%0A%20%20%20%20PGCRDObs%20-.-%3E%20PGInstanceObs%0A%0A%20%20%20%20PGInstanceObs%20--%3E%20%7Ckube-bind%7C%20PGInstanceObsWs%0Aend%0A"})]),fallback:s(()=>[...e[2]||(e[2]=[o(" Loading... ",-1)])]),_:1})),e[16]||(e[16]=t("h3",{id:"operator-solution",tabindex:"-1"},[o("Operator Solution "),t("a",{class:"header-anchor",href:"#operator-solution","aria-label":'Permalink to "Operator Solution"'},"​")],-1)),e[17]||(e[17]=t("p",null,"The Webshop team uses their own operator to manage their Webshop, which they wrote using multicluster-runtime, allowing them to interact with many clusters at once.",-1)),e[18]||(e[18]=t("p",null,"The Webshop team maintains definitions of the Webshop instances in their KCP Workspace and are deploying resources based on these definitions where they are needed.",-1)),(a(),n(l,null,{default:s(()=>[i(r,{id:"mermaid-66",class:"mermaid",graph:"flowchart%20LR%0A%0Asubgraph%20KCP%0A%20%20%20%20subgraph%20KCP_DB%5Broot%3Ateam%3Adatabase%5D%0A%20%20%20%20%20%20%20%20PGExport%5BPostgres%20APIExport%5D%0A%20%20%20%20end%0A%0A%20%20%20%20subgraph%20KCP_Obs%5Broot%3Ateam%3Aobservability%5D%0A%20%20%20%20%20%20%20%20ElasticExport%5BElastic%20APIExport%5D%0A%20%20%20%20end%0A%0A%20%20%20%20subgraph%20KCP_WS%5Broot%3Ateam%3Awebshop%5D%0A%20%20%20%20%20%20%20%20ElasticBinding%5BElastic%20APIBinding%5D%0A%20%20%20%20%20%20%20%20PGBinding%5BPostgres%20APIBinding%5D%0A%0A%20%20%20%20%20%20%20%20WebshopCRD%5BWebshop%20CRD%5D%0A%20%20%20%20%20%20%20%20WebshopInstance%5BWebshop%20Instance%5D%0A%20%20%20%20%20%20%20%20WebshopCRD%20-.-%3E%20WebshopInstance%0A%20%20%20%20%20%20%20%20WebshopInstanceDB%5BWebshop%20Instance%20PG%5D%0A%20%20%20%20%20%20%20%20WebshopInstanceDB%20--%3E%20PGBinding%0A%20%20%20%20%20%20%20%20WebshopInstanceElastic%5BWebshop%20Instance%20Elastic%5D%0A%20%20%20%20%20%20%20%20WebshopInstanceElastic%20--%3E%20ElasticBinding%0A%20%20%20%20end%0A%0A%20%20%20%20PGBinding%20-.-%3E%20PGExport%0A%20%20%20%20ElasticBinding%20-.-%3E%20ElasticExport%0Aend%0A%0Asubgraph%20WSCompute%5BWorkshop%20Compute%20Cluster%5D%0A%20%20%20%20WebshopOperator%5BWebshop%20Operator%5D%0A%20%20%20%20Webshop%0Aend%0AWebshopOperator%20-.-%3E%20WebshopInstance%0AWebshopOperator%20--%3E%20WebshopInstanceDB%0AWebshopOperator%20--%3E%20WebshopInstanceElastic%0AWebshopOperator%20--%3E%20Webshop%0A"})]),fallback:s(()=>[...e[3]||(e[3]=[o(" Loading... ",-1)])]),_:1})),e[19]||(e[19]=t("p",null,"The operator also provides the information from the database and elastic service to the webshop instance.",-1))])}const B=p(u,[["render",c]]);export{E as __pageData,B as default};
